apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "steward.fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: "{{ template "steward.name" . }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  initializers:
    pending: []
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: "{{ template "steward.name" . }}"
        release: "{{ .Release.Name }}"
{{- if and .Values.criticalAddon (eq .Release.Namespace "kube-system") }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
{{- end }}
    spec:
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "steward.fullname" . }}{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
      containers:
      - args:
        - run
        - --v={{ .Values.logLevel }}
        image: {{ .Values.operator.image }}:{{ .Values.operator.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy  }}
        {{- if .Values.imagePullSecrets }}
        imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
        {{- end }}
        name: operator
        ports:
        - containerPort: 56790
          name: http
          protocol: TCP
        terminationMessagePolicy: File
{{- if and .Values.criticalAddon (eq .Release.Namespace "kube-system") }}
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
{{- end -}}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end -}}
