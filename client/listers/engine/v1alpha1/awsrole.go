/*
Copyright The KubeVault Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubevault.dev/operator/apis/engine/v1alpha1"
)

// AWSRoleLister helps list AWSRoles.
type AWSRoleLister interface {
	// List lists all AWSRoles in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AWSRole, err error)
	// AWSRoles returns an object that can list and get AWSRoles.
	AWSRoles(namespace string) AWSRoleNamespaceLister
	AWSRoleListerExpansion
}

// aWSRoleLister implements the AWSRoleLister interface.
type aWSRoleLister struct {
	indexer cache.Indexer
}

// NewAWSRoleLister returns a new AWSRoleLister.
func NewAWSRoleLister(indexer cache.Indexer) AWSRoleLister {
	return &aWSRoleLister{indexer: indexer}
}

// List lists all AWSRoles in the indexer.
func (s *aWSRoleLister) List(selector labels.Selector) (ret []*v1alpha1.AWSRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AWSRole))
	})
	return ret, err
}

// AWSRoles returns an object that can list and get AWSRoles.
func (s *aWSRoleLister) AWSRoles(namespace string) AWSRoleNamespaceLister {
	return aWSRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AWSRoleNamespaceLister helps list and get AWSRoles.
type AWSRoleNamespaceLister interface {
	// List lists all AWSRoles in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AWSRole, err error)
	// Get retrieves the AWSRole from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AWSRole, error)
	AWSRoleNamespaceListerExpansion
}

// aWSRoleNamespaceLister implements the AWSRoleNamespaceLister
// interface.
type aWSRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AWSRoles in the indexer for a given namespace.
func (s aWSRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AWSRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AWSRole))
	})
	return ret, err
}

// Get retrieves the AWSRole from the indexer for a given namespace and name.
func (s aWSRoleNamespaceLister) Get(name string) (*v1alpha1.AWSRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("awsrole"), name)
	}
	return obj.(*v1alpha1.AWSRole), nil
}
