/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubevault.dev/apimachinery/apis/engine/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MariaDBRoleLister helps list MariaDBRoles.
// All objects returned here must be treated as read-only.
type MariaDBRoleLister interface {
	// List lists all MariaDBRoles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MariaDBRole, err error)
	// MariaDBRoles returns an object that can list and get MariaDBRoles.
	MariaDBRoles(namespace string) MariaDBRoleNamespaceLister
	MariaDBRoleListerExpansion
}

// mariaDBRoleLister implements the MariaDBRoleLister interface.
type mariaDBRoleLister struct {
	indexer cache.Indexer
}

// NewMariaDBRoleLister returns a new MariaDBRoleLister.
func NewMariaDBRoleLister(indexer cache.Indexer) MariaDBRoleLister {
	return &mariaDBRoleLister{indexer: indexer}
}

// List lists all MariaDBRoles in the indexer.
func (s *mariaDBRoleLister) List(selector labels.Selector) (ret []*v1alpha1.MariaDBRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MariaDBRole))
	})
	return ret, err
}

// MariaDBRoles returns an object that can list and get MariaDBRoles.
func (s *mariaDBRoleLister) MariaDBRoles(namespace string) MariaDBRoleNamespaceLister {
	return mariaDBRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MariaDBRoleNamespaceLister helps list and get MariaDBRoles.
// All objects returned here must be treated as read-only.
type MariaDBRoleNamespaceLister interface {
	// List lists all MariaDBRoles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MariaDBRole, err error)
	// Get retrieves the MariaDBRole from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MariaDBRole, error)
	MariaDBRoleNamespaceListerExpansion
}

// mariaDBRoleNamespaceLister implements the MariaDBRoleNamespaceLister
// interface.
type mariaDBRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MariaDBRoles in the indexer for a given namespace.
func (s mariaDBRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MariaDBRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MariaDBRole))
	})
	return ret, err
}

// Get retrieves the MariaDBRole from the indexer for a given namespace and name.
func (s mariaDBRoleNamespaceLister) Get(name string) (*v1alpha1.MariaDBRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mariadbrole"), name)
	}
	return obj.(*v1alpha1.MariaDBRole), nil
}
